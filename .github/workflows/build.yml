name: Build SerenityOS Custom

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential cmake ninja-build qemu-system-x86 git python3 g++ clang lld \
            libgmp-dev libmpfr-dev libmpc-dev texinfo libz-dev libedit-dev curl

      - name: Fake Toolchain and disable Jakt
        run: |
          mkdir -p Toolchain/Local/clang/bin
          mkdir -p Toolchain/Local/jakt/bin
          mkdir -p Toolchain/CMake
          touch Toolchain/Local/clang/bin/x86_64-pc-serenity-ld
          touch Toolchain/CMake/ClangToolchain.txt.in
          touch Toolchain/CMake/meson-cross-file-Clang.txt.in
          echo '#!/bin/bash' > Meta/BuildJakt.sh
          echo 'echo "Skipping Jakt build (fake script)"' >> Meta/BuildJakt.sh
          chmod +x Meta/BuildJakt.sh

      - name: Configure environment
        run: |
          export SERENITY_ARCH=x86_64
          export SERENITY_TOOLCHAIN=Clang
          export SERENITY_DISABLE_LAGOM=1
          echo "SERENITY_ARCH=x86_64" >> $GITHUB_ENV
          echo "SERENITY_TOOLCHAIN=Clang" >> $GITHUB_ENV
          echo "SERENITY_DISABLE_LAGOM=1" >> $GITHUB_ENV
          mkdir -p Build/x86_64

      - name: Build SerenityOS (Core only)
        run: |
          cmake -S . -B Build/x86_64 -GNinja -DSERENITY_TOOLCHAIN=Clang -DSERENITY_ARCH=x86_64 -DENABLE_LAGOM=OFF -DENABLE_JAKT=OFF
          cmake --build Build/x86_64 --target image

      - name: Package ISO
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: SerenityOS-ISO
          path: Build/x86_64/*.iso
